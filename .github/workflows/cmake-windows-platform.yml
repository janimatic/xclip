# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a windows platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: windows-latest
    # Error: Failed to install Lua: Error: Unable to locate executable file: cl.
    runs-on: windows-2019

    steps:
    

    - uses: actions/checkout@v3
    
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      
    # run: |
    # curl -o lua-5.1.5_Win64_dll17_lib.zip -L https://sourceforge.net/projects/luabinaries/files/5.1.5/Windows%20Libraries/Dynamic/lua-5.1.5_Win64_dll17_lib.zip/download
    # tar -xf lua-5.1.5_Win64_dll17_lib.zip $LUA_BINARY
    # just use chocolatey !
    # https://community.chocolatey.org/packages/Lua
    - name: Install lua51
      run: choco install lua
    
    - uses: ilammy/msvc-dev-cmd@v1
    
    # https://github.com/leafo/gh-actions-lua
    # - uses: leafo/gh-actions-lua@v10
      # with:
        # luaVersion: "5.1"
        
    - uses: jkl1337/gh-actions-lua@v11
      with:
        luaVersion: "5.1.5"
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

